[workspace]
members = [
    "boulder",
    "moss",
    "crates/*",
]
default-members = [
    "moss"
]
resolver = "2"

[workspace.package]
edition = "2021"

[workspace.dependencies]
bytes = "1.5.0"
chrono = "0.4.34"
clap = { version = "4.5.1", features = ["derive", "string"] }
clap_complete = "4.5.2"
crossterm = "0.27.0"
derive_more = "0.99"
dialoguer = "0.11.0"
diesel = { version = "2.1.4", features = ["sqlite", "returning_clauses_for_sqlite_3_35"] }
diesel_migrations = "2.1.0"
dirs = "5.0"
elf = "0.7.4"
indicatif = "0.17.8"
itertools = "0.12.1"
futures = "0.3.30"
glob = "0.3.1"
hex = "0.4.3"
libsqlite3-sys = { version = "0.25.2", features = ["bundled"] }
log = "0.4"
nom = "7.1.3"
nix = { version = "0.27.1", features = ["user", "fs", "sched", "process", "mount", "hostname", "signal", "term"] }
once_cell = "1.19.0"
petgraph = "0.6.4"
rayon = "1.9"
regex = "1.10.2"
reqwest = { version = "0.11.24", default-features = false, features = ["rustls-tls", "stream"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_yaml = "0.9"
sha2 = "0.10.8"
strum = { version = "0.25", features = ["derive"] }
thiserror = "1"
tokio = { version = "1.36", features = ["full"] }
tokio-stream = { version = "0.1.14", features = ["time"] }
tokio-util = { version = "0.7.9", features = ["io"] }
url = { version = "2.5.0", features = ["serde"] }
xxhash-rust = { version = "0.8.10", features = ["xxh3"] }
zstd = { version = "0.12.4", features = ["zstdmt"] }

[profile.release]
lto = "thin"

[profile.packaging]
inherits = "release"
lto = true
codegen-units = 1
opt-level = 3
# allow packaging system to do it
strip = "none"
debug = true

# We want people who use the onboarding steps to get a nice compromise
# between fast compilation and fast runtime, but with checks in place
# and full backtraces. Hyperfine tests shows opt-level = 1 to be a good
# compromise between compile speed and runtime speed.
[profile.onboarding]
inherits = "dev"
opt-level = 1
lto = "thin"
debug = true
strip = "none"
